name: Docker Build and Push

on:
  schedule:
    - cron: '0 */12 * * *'  # Run every 12 hours
  workflow_dispatch:  # Allow manual triggers

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/cursord

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest Cursor version
        id: version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/getcursor/cursor/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          LATEST_VERSION=${LATEST_VERSION#v}  # Remove 'v' prefix if present
          echo "CURSOR_VERSION=${LATEST_VERSION}" >> $GITHUB_ENV
          echo "Latest version: ${LATEST_VERSION}"

      - name: Check if Docker image exists
        id: check_image
        run: |
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          if docker manifest inspect ${{ env.IMAGE_NAME }}:v${CURSOR_VERSION} > /dev/null 2>&1; then
            echo "Image already exists, skipping build"
            echo "EXISTS=true" >> $GITHUB_ENV
          else
            echo "Image does not exist, will build"
            echo "EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        if: env.EXISTS == 'false'
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        if: env.EXISTS == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:v${{ env.CURSOR_VERSION }}
            ${{ env.IMAGE_NAME }}:latest

      - name: Log out from Docker Hub
        if: always()
        run: docker logout 